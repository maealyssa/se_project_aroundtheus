!function(){"use strict";var e={960:function(e,t,s){e.exports=s.p+"190142da37235e3079a8.jpg"},291:function(e,t,s){e.exports=s.p+"9aed7cb3f54c0faa1f9f.jpg"},822:function(e,t,s){e.exports=s.p+"0fb96793ab89da938a7d.jpg"},328:function(e,t,s){e.exports=s.p+"395d21149564d1293c88.jpg"},705:function(e,t,s){e.exports=s.p+"a22751dd8a0e22ceb5f6.jpg"},561:function(e,t,s){e.exports=s.p+"0df918d480d675e4708e.jpg"}},t={};function s(r){var n=t[r];if(void 0!==n)return n.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,s),i.exports}s.m=e,s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s.b=document.baseURI||self.location.href,function(){const e=[{name:"Lago di Braies",link:new URL(s(291),s.b)},{name:"Vanoise National Park",link:new URL(s(705),s.b)},{name:"Lake Louise",link:new URL(s(822),s.b)},{name:"Latemar",link:new URL(s(328),s.b)},{name:"Bald Mountains",link:new URL(s(960),s.b)},{name:"Yosemite Valley",link:new URL(s(561),s.b)}];var t=class{constructor(e,t,s,r,n){this._name=e.name,this._link=e.link,this._cardId=e._id,this._cardSelector=n,this._handleImageClick=t,this._handleLikeButton=s,this._handleDeleteLike=r}_setEventListeners(){this._likeButton=this._element.querySelector(".card__like-button"),this._likeButton.addEventListener("click",(()=>this._handleLikeButton(this._cardId))),this._element.querySelector(".card__trash-button").addEventListener("click",(()=>this._handleDelete(this._cardId))),this._imageModal=this._element.querySelector(".card__image"),this._imageModal.addEventListener("click",(()=>this._handleImageClick({link:this._link,name:this._name})))}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}handleLike=()=>{this._likeButton.classList.toggle("card__like-button_active")};_handleDelete(){this._element.remove(),this._element=null}generateCard(){this._element=this._getTemplate();const e=this._element.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this._element}};class r{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=this._formElement.querySelectorAll(this._inputSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_setEventListeners(){this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this.disableButton()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}}class n{constructor(e){let{popupSelector:t}=e;this._popup=document.querySelector(t),this._closeButton=this._popup.querySelector(".modal__close")}setEventListeners(){this._popup.addEventListener("click",(e=>{e.target===e.currentTarget&&this.close()})),this._closeButton.addEventListener("click",(()=>this.close()))}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()}}class i extends n{constructor(e,t){super({popupSelector:e}),this._form=this._popup.querySelector(".modal__form"),this._submitButton=this._popup.querySelector(".modal__button"),this._formInputs=this._popup.querySelectorAll("input"),this._handleAddCardFormSubmit=t}_getInputValues(){const e={};return this._formInputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popup.addEventListener("submit",(e=>{this._handleAddCardFormSubmit(this._getInputValues()),e.preventDefault()}))}close(){this._form.reset(),super.close()}}const o=document.querySelector(".profile__edit-button"),a=document.querySelector(".profile__add-button"),l=document.forms["card-form"],c=document.forms["profile-form"],d=document.querySelector("#profile-input-name"),h=document.querySelector("#profile-input-description"),u={};var _;_={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",formSelector:"form"},Array.from(document.querySelectorAll(_.formSelector)).forEach((e=>{const t=new r(_,e),s=e.getAttribute("name");u[s]=t,t.enableValidation()}));const m=new class extends n{constructor(e){super({popupSelector:e}),this._modalName=this._popup.querySelector(".modal__name"),this._modalImage=this._popup.querySelector(".modal__image"),super.setEventListeners()}open(e){this._modalName.textContent=e.name,this._modalImage.alt=e.name,this._modalImage.src=e.link,super.open()}}("#image-modal");function p(e){return new t({data:e,handleImageClick:e=>{m.open(e)}},"#card-template").generateCard()}m.close();const f=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._cardSelector=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._cardSelector.prepend(e)}}({items:e,renderer:e=>{const t=p(e);f.addItem(t)}},".cards__list");f.renderItems(e);const b=new i("#add-modal",(e=>{const t=p({name:e.name,link:e.link});b.close(),f.addItem(t)}));a.addEventListener("click",(()=>{u[l.getAttribute("name")].resetValidation(),b.open()})),b.setEventListeners();const E=new class{constructor(e,t,s){this._nameEl=document.querySelector(e),this._descriptionEl=document.querySelector(t),this._link=s}getUserInfo(){return{name:this._nameEl.textContent,description:this._descriptionEl.textContent}}setUserInfo(e,t){this._nameEl.textContent=e,this._descriptionEl.textContent=t}setAvatarImage(e){this._link.src=e}}(".profile__title",".profile__description"),v=new i("#edit-modal",(e=>{E.setUserInfo(e.name,e.description),v.close()}));o.addEventListener("click",(()=>{const e=E.getUserInfo();d.value=e.name,h.value=e.description,u[c.getAttribute("name")].disableButton(),v.open()})),v.setEventListeners(),new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_response=e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`);async getInitialCards(){const e=await fetch(`${this._baseUrl}/cards`,{headers:this._headers});return this._response(e)}async getUserInfo(){const e=await fetch(`${this._baseUrl}/users/me`,{headers:this._headers});return this._response(e)}async editProfile(e){let{name:t,about:s}=e;const r=await fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})});return this._response(r)}async editProfileAvatar(e){let{link:t}=e;const s=await fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})});return this._response(s)}async getAllCards(){const e=await fetch(`${this._baseUrl}/cards`,{headers:this._headers});return this._response(e)}async addNewCard(e){let{name:t,link:s}=e;const r=await fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})});return this._response(r)}async deleteCard(e){let{cardId:t}=e;const s=await fetch(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:this._headers});return this._response(s)}async addLike(e){let{cardId:t}=e;const s=await fetch(`${this._baseUrl}/cards/likes/${t}`,{method:"PUT",headers:this._headers});return this._response(s)}async deleteLike(e){let{cardId:t}=e;const s=await fetch(`${this._baseUrl}/cards/${t}/likes`,{method:"DELETE",headers:this._headers});return this._response(s)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"174196d6-45bd-490a-bc0e-39b0754c7da9","Content-Type":"application/json"}}).getInitialCards().then((e=>e.json())).then((e=>console.log(e))).catch((e=>{console.error(e)}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,