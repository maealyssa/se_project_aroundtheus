!function(){"use strict";var e={960:function(e,t,r){e.exports=r.p+"190142da37235e3079a8.jpg"},291:function(e,t,r){e.exports=r.p+"9aed7cb3f54c0faa1f9f.jpg"},822:function(e,t,r){e.exports=r.p+"0fb96793ab89da938a7d.jpg"},328:function(e,t,r){e.exports=r.p+"395d21149564d1293c88.jpg"},705:function(e,t,r){e.exports=r.p+"a22751dd8a0e22ceb5f6.jpg"},561:function(e,t,r){e.exports=r.p+"0df918d480d675e4708e.jpg"}},t={};function r(s){var n=t[s];if(void 0!==n)return n.exports;var i=t[s]={exports:{}};return e[s](i,i.exports,r),i.exports}r.m=e,r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r.b=document.baseURI||self.location.href,function(){new URL(r(291),r.b),new URL(r(705),r.b),new URL(r(822),r.b),new URL(r(328),r.b),new URL(r(960),r.b),new URL(r(561),r.b);var e=class{constructor(e,t,r,s,n){this._name=e.name,this._link=e.link,this._cardId=e._id,this._isLiked=e.isLiked,this._cardSelector=s,this._handleImageClick=t,this._handleDelete=r,this._setIsLiked=n}_setEventListeners(){this._likeButton=this._element.querySelector(".card__like-button"),this._likeButton.addEventListener("click",(()=>this._setIsLiked(this))),this._element.querySelector(".card__trash-button").addEventListener("click",(()=>this._handleDelete)),this._imageModal=this._element.querySelector(".card__image"),this._imageModal.addEventListener("click",(()=>this._handleImageClick({link:this._link,name:this._name})))}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_handleLike(){this._isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}isLiked(){return this._isLiked}deleteCard(){this._element.remove(),this._element=null}generateCard(){this._element=this._getTemplate();const e=this._element.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this._handleLike(),this._element}getCardId(){return this._cardId}};class t{constructor(e,t){let{items:r,renderer:s}=e;this._items=r,this._renderer=s,this._cardSelector=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._cardSelector.prepend(e)}}let s;document.querySelector(".profile__edit-button"),document.querySelector(".profile__add-button"),document.forms["card-form"],document.forms["profile-form"],document.querySelector("#profile-input-name"),document.querySelector("#profile-input-description");const n=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>{e.ok?e.json():Promise.reject("An error has occurred",e.status)})).then((e=>e)).catch((e=>{console.error(e)}))}fetchUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>{e.ok?e.json():Promise.reject("An error has occurred",e.status)})).then((e=>e)).catch((e=>{console.error(e)}))}editProfile(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editProfileAvatar(e){let{link:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((e=>{e.ok?e.json():Promise.reject("An error has occurred",e.status)})).then((e=>e)).catch((e=>{console.error(e)}))}addNewCard(e){let{cardName:t,cardLink:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){let{cardId:t}=e;return fetch(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:this._headers})}addLike(e){let{cardId:t}=e;return fetch(`${this._baseUrl}/cards/likes/${t}`,{method:"PUT",headers:this._headers}).then((e=>{e.ok?e.json():Promise.reject("An error has occurred",e.status)})).then((e=>e)).catch((e=>{console.error(e)}))}deleteLike(e){let{cardId:t}=e;return fetch(`${this._baseUrl}/cards/${t}/likes`,{method:"DELETE",headers:this._headers}).then((e=>{e.ok?e.json():Promise.reject("An error has occurred",e.status)})).then((e=>e)).catch((e=>{console.error(e)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"174196d6-45bd-490a-bc0e-39b0754c7da9","Content-Type":"application/json"}}),i=e=>{popupImage.open(e)},a=e=>{e.isLiked()?n.deleteLike(e.getCardId()).then((t=>{e.setIsLiked(!1)})).catch((e=>{console.error(e)})):n.addLike(e.getCardId()).then((t=>{e.setIsLiked(!0)})).catch((e=>{console.error(e)}))},o=new class{constructor(e,t,r){this._nameEl=document.querySelector(e),this._descriptionEl=document.querySelector(t),this._link=document.querySelector(r)}getUserInfo(){return{name:this._nameEl.textContent,description:this._descriptionEl.textContent,avatar:this._link.src}}setUserInfo(e,t){this._nameEl.textContent=e,this._descriptionEl.textContent=t}setAvatarImage(e){this._link.src=e}}(".profile__title",".profile__description",".profile__avatar");Promise.all([n.fetchUserInfo(),n.getInitialCards()]).then((r=>{let[n,c]=r;o.setUserInfo(n.name,n.about),o.setAvatarImage(n.avatar),s=new t({items:c,renderer:t=>{const r=(t=>new e(t,i,handleDelete,"#card-template",a).generateCard())(t);cardSection.addItem(r)}},".cards__list"),s.renderItems()})).catch((e=>{console.log(e)}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,