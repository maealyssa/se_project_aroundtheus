!function(){"use strict";var e={960:function(e,t,s){e.exports=s.p+"190142da37235e3079a8.jpg"},291:function(e,t,s){e.exports=s.p+"9aed7cb3f54c0faa1f9f.jpg"},822:function(e,t,s){e.exports=s.p+"0fb96793ab89da938a7d.jpg"},328:function(e,t,s){e.exports=s.p+"395d21149564d1293c88.jpg"},705:function(e,t,s){e.exports=s.p+"a22751dd8a0e22ceb5f6.jpg"},561:function(e,t,s){e.exports=s.p+"0df918d480d675e4708e.jpg"}},t={};function s(r){var n=t[r];if(void 0!==n)return n.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,s),i.exports}s.m=e,s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s.b=document.baseURI||self.location.href,function(){new URL(s(291),s.b),new URL(s(705),s.b),new URL(s(822),s.b),new URL(s(328),s.b),new URL(s(960),s.b),new URL(s(561),s.b);var e=class{constructor(e,t,s,r,n,i){this._name=e.name,this._link=e.link,this._cardId=e._id,this._likes=e.likes,this._cardSelector=t,this._handleImageClick=s,this._handleDelete=n,this._handleLikeCard=r,this._currentUserId=i,this._owner=e.owner._id}_setEventListeners(){this.likeButton=this._element.querySelector(".card__like-button"),this.likeButton.addEventListener("click",(()=>this._setIsLiked(this))),this._element.querySelector(".card__trash-button").addEventListener("click",(()=>this._handleDelete)),this._imageModal=this._element.querySelector(".card__image"),this._imageModal.addEventListener("click",(()=>this._handleImageClick({link:this._link,name:this._name})))}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}handleLike(){this.isLiked?this.likeButton.classList.add("card__like-button_active"):this.likeButton.classList.remove("card__like-button_active")}isLiked(){return this._likes.some((e=>e._cardId===this._currentUserId))}deleteCard(){this._element.remove(),this._element=null}generateCard(){this._element=this._getTemplate();const e=this._element.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this.handleLike(),this._element}};class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=this._formElement.querySelectorAll(this._inputSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_setEventListeners(){this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this.disableButton()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}}class r{constructor(e){let{popupSelector:t}=e;this._popup=document.querySelector(t),this._closeButton=this._popup.querySelector(".modal__close")}setEventListeners(){this._popup.addEventListener("click",(e=>{e.target===e.currentTarget&&this.close()})),this._closeButton.addEventListener("click",(()=>this.close()))}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()}}class n extends r{constructor(e,t){super({popupSelector:e}),this._form=this._popup.querySelector(".modal__form"),this._submitButton=this._popup.querySelector(".modal__button"),this._formInputs=this._popup.querySelectorAll("input"),this._handleFormSubmit=t,this._buttonText=this._submitButton.textContent}_getInputValues(){const e={};return this._formInputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popup.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues())}))}renderLoading(e){this._submitButton.textContent=e?"Loading...":this._buttonText}close(){this._form.reset(),super.close()}}class i{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._cardSelector=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._cardSelector.prepend(e)}}const o=document.querySelector(".profile__edit-button"),a=document.querySelector(".profile__add-button"),l=document.forms["card-form"],c=document.forms["profile-form"],d=document.querySelector("#profile-input-name"),h=document.querySelector("#profile-input-description"),u=new class{constructor(e){let{nameEl:t,descriptionEl:s,avatarEl:r}=e;this._nameEl=document.querySelector(t),this._descriptionEl=document.querySelector(s),this._link=document.querySelector(r)}getUserInfo(){return{name:this._nameEl.textContent,description:this._descriptionEl.textContent,avatar:this._link.src}}setUserInfo(e){let{name:t,description:s}=e;this._nameEl.textContent=t,this._descriptionEl.textContent=s}setAvatarImage(e){this._link.src=e}}(".profile__title",".profile__description",".profile__avatar"),_=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._url=t,this._headers=s,this._authorization=s.authorization}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getInitialCards(){return fetch(`${this._url}/cards`,{headers:this._headers}).then(this._checkResponse)}fetchUserInfo(){return fetch(`${this._url}/users/me`,{headers:this._headers}).then(this._checkResponse)}editProfile(e){let{name:t,description:s}=e;return fetch(`${this._url}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this._checkResponse)}editProfileAvatar(e){let{link:t}=e;return fetch(`${this._url}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}addNewCard(e){let{cardName:t,cardLink:s}=e;return fetch(`${this._url}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._url}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}addLike(e){return fetch(`${this._url}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}deleteLike(e){return fetch(`${this._url}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"174196d6-45bd-490a-bc0e-39b0754c7da9","Content-Type":"application/json"}});let m,p;Promise.all([_.fetchUserInfo(),_.getInitialCards()]).then((e=>{let[t,s]=e;p=t._id,u.setUserInfo(t.name,t.about),u.setAvatarImage(t.avatar),m=new i({items:s,renderer:e=>{const t=g(e);m.addItem(t)}},".cards__list"),m.renderItems()})).catch((e=>{console.log(e)}));const f=new class extends r{constructor(e){super({popupSelector:e}),this._modalName=this._popup.querySelector(".modal__name"),this._modalImage=this._popup.querySelector(".modal__image"),super.setEventListeners()}open(e){this._modalName.textContent=e.name,this._modalImage.alt=e.name,this._modalImage.src=e.link,super.open()}}("#image-modal");f.close();const v=e=>{f.open(e)},b=e=>{L.open(),L.setSubmitAction((()=>{L.renderLoading(!0),_.deleteCard(cardId).then((()=>{e.deleteCard(),L.close()})).catch((e=>{console.log(e)})).finally((()=>{L.renderLoading(!1)}))}))},E=e=>{e?_.removeLike(data).catch((e=>{console.log(e)})):_.addLike(data).catch((e=>{console.log(e)}))},L=new class extends r{constructor(e){super({popupSelector:e}),this._submitButton=this._popup.querySelector(".modal__button")}setEventListeners(){super.setEventListeners(),this._submitButton.addEventListener("submit",(e=>{e.preventDefault(),this._handleDeleteSubmit()}))}open(e){this._handleDeleteCallback=e,super.open()}setSubmitAction(e){this._handleDeleteSubmit=e}}("#confirm-delete-modal",(e=>{b(e)}));L.setEventListeners();const g=t=>new e(t,v,E,b,p).generateCard(),S={};var k;k={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",formSelector:"form"},Array.from(document.querySelectorAll(k.formSelector)).forEach((e=>{const s=new t(k,e),r=e.getAttribute("name");S[r]=s,s.enableValidation()}));const y=new n("#add-modal",(e=>{y.renderLoading(!0),_.addNewCard(e).then((e=>{const t=g(e);m.addItem(t),y.close()})).catch((e=>{console.log(e)})).finally((()=>{y.renderLoading(!1)}))}));y.setEventListeners(),a.addEventListener("click",(()=>{S[l.getAttribute("name")].resetValidation(),y.open()}));const C=new n("#edit-modal",(e=>{C.renderLoading(!0),_.editProfile(e).then((()=>{u.setUserInfo({name:e.name,description:e.description}),C.close()})).catch((e=>{console.error(e)})).finally((()=>{C.renderLoading(!1)}))}));C.setEventListeners(),o.addEventListener("click",(()=>{const{name:e,description:t}=u.getUserInfo();d.value=e,h.value=t,S[c.getAttribute("name")].disableButton(),C.open()}));const I=new n("#change-avatar-modal",(e=>{I.renderLoading(!0),_.editProfileAvatar(e).then((e=>{u.setAvatarImage(e.avatar),I.close()})).catch((e=>{console.error(e)})).finally((()=>{I.renderLoading(!1)}))}));I.setEventListeners()}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,