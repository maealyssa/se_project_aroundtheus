!function(){"use strict";var e={960:function(e,t,s){e.exports=s.p+"190142da37235e3079a8.jpg"},291:function(e,t,s){e.exports=s.p+"9aed7cb3f54c0faa1f9f.jpg"},822:function(e,t,s){e.exports=s.p+"0fb96793ab89da938a7d.jpg"},328:function(e,t,s){e.exports=s.p+"395d21149564d1293c88.jpg"},705:function(e,t,s){e.exports=s.p+"a22751dd8a0e22ceb5f6.jpg"},561:function(e,t,s){e.exports=s.p+"0df918d480d675e4708e.jpg"}},t={};function s(r){var n=t[r];if(void 0!==n)return n.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,s),o.exports}s.m=e,s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s.b=document.baseURI||self.location.href,function(){new URL(s(291),s.b),new URL(s(705),s.b),new URL(s(822),s.b),new URL(s(328),s.b),new URL(s(960),s.b),new URL(s(561),s.b);const e={cardsList:".cards__list",cardTemplate:"#card-template",previewPopup:"#image-modal",editFormPopup:"#edit-modal",addFormPopup:"#add-modal",profileTitle:".profile__title",profileDescription:".profile__description",profileAvatar:".profile__avatar",formModalContainer:".modal__container",imageModalContainer:".modal__container-image",formInputName:"#profile-input-name",formInputDescription:"#profile-input-description",changeAvatarPopup:"#change-avatar-modal",avatarForm:"#avatar-form",updateAvatarButton:"#modal-avatar-button",confirmDeleteModal:"#confirm-delete-modal"};var t=class{constructor(e,t,s,r,n){this._name=e.name,this._link=e.link,this._cardId=e._id,this._isLiked=e.isLiked,this._cardSelector=r,this._handleImageClick=t,this._handleDelete=s,this._setIsLiked=n}_setEventListeners(){this._likeButton=this._element.querySelector(".card__like-button"),this._likeButton.addEventListener("click",(()=>this._setIsLiked(this))),this._element.querySelector(".card__trash-button").addEventListener("click",(()=>this._handleDelete)),this._imageModal=this._element.querySelector(".card__image"),this._imageModal.addEventListener("click",(()=>this._handleImageClick({link:this._link,name:this._name})))}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_handleLike(){this._isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}isLiked(){return this._isLiked}deleteCard(){this._element.remove(),this._element=null}generateCard(){this._element=this._getTemplate();const e=this._element.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this._handleLike(),this._element}getCardId(){return this._cardId}};class r{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=this._formElement.querySelectorAll(this._inputSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_setEventListeners(){this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this.disableButton()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}}class n{constructor(e){let{popupSelector:t}=e;this._popup=document.querySelector(t),this._closeButton=this._popup.querySelector(".modal__close")}setEventListeners(){this._popup.addEventListener("click",(e=>{e.target===e.currentTarget&&this.close()})),this._closeButton.addEventListener("click",(()=>this.close()))}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()}}class o extends n{constructor(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";super({popupSelector:e}),this._form=this._popup.querySelector(".modal__form"),this._submitButton=this._popup.querySelector(".modal__button"),this._formInputs=this._popup.querySelectorAll("input"),this._handleFormSubmit=t,this._buttonText=this._submitButton.textContent,this._loadingText=s}showLoading(){this._buttonText=this._loadingText}hideLoading(){this._buttonText=this._buttonText}_getInputValues(){const e={};return this._formInputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popup.addEventListener("submit",(e=>{this._handleFormSubmit(this._getInputValues()),e.preventDefault()}))}close(){this._form.reset(),super.close()}}class i{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._cardSelector=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._cardSelector.prepend(e)}}const a=document.querySelector(".profile__edit-button"),l=document.querySelector(".profile__add-button"),d=document.forms["card-form"],c=document.forms["profile-form"],h=document.querySelector("#profile-input-name"),u=document.querySelector("#profile-input-description");let _;const m=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>{e.ok?e.json():Promise.reject("An error has occurred",e.status)})).then((e=>e)).catch((e=>{console.error(e)}))}fetchUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>{e.ok?e.json():Promise.reject("An error has occurred",e.status)})).then((e=>e)).catch((e=>{console.error(e)}))}editProfile(e){let{name:t,about:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})})}editProfileAvatar(e){let{link:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((e=>{e.ok?e.json():Promise.reject("An error has occurred",e.status)})).then((e=>e)).catch((e=>{console.error(e)}))}addNewCard(e){let{cardName:t,cardLink:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})})}deleteCard(e){let{cardId:t}=e;return fetch(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:this._headers})}addLike(e){let{cardId:t}=e;return fetch(`${this._baseUrl}/cards/likes/${t}`,{method:"PUT",headers:this._headers}).then((e=>{e.ok?e.json():Promise.reject("An error has occurred",e.status)})).then((e=>e)).catch((e=>{console.error(e)}))}deleteLike(e){let{cardId:t}=e;return fetch(`${this._baseUrl}/cards/${t}/likes`,{method:"DELETE",headers:this._headers}).then((e=>{e.ok?e.json():Promise.reject("An error has occurred",e.status)})).then((e=>e)).catch((e=>{console.error(e)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"174196d6-45bd-490a-bc0e-39b0754c7da9","Content-Type":"application/json"}}),p=s=>new t(s,f,B,e.cardTemplate,v).generateCard(),f=e=>{S.open(e)},v=e=>{e.isLiked()?m.deleteLike(e.getCardId()).then((t=>{e.setIsLiked(!1)})).catch((e=>{console.error(e)})):m.addLike(e.getCardId()).then((t=>{e.setIsLiked(!0)})).catch((e=>{console.error(e)}))},b=new class{constructor(e,t,s){this._nameEl=document.querySelector(e),this._descriptionEl=document.querySelector(t),this._link=document.querySelector(s)}getUserInfo(){return{name:this._nameEl.textContent,description:this._descriptionEl.textContent,avatar:this._link.src}}setUserInfo(e,t){this._nameEl.textContent=e,this._descriptionEl.textContent=t}setAvatarImage(e){this._link.src=e}}(e.profileTitle,e.profileDescription,e.profileAvatar);Promise.all([m.fetchUserInfo(),m.getInitialCards()]).then((t=>{let[s,r]=t;b.setUserInfo(s.name,s.about),b.setAvatarImage(s.avatar),_=new i({items:r,renderer:e=>{const t=p(e);cardSection.addItem(t)}},e.cardsList),_.renderItems()})).catch((e=>{console.log(e)}));const L={};var g;g={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",formSelector:"form"},Array.from(document.querySelectorAll(g.formSelector)).forEach((e=>{const t=new r(g,e),s=e.getAttribute("name");L[s]=t,t.enableValidation()}));const E=new o(e.addFormPopup,(e=>{E.showLoading();const{name:t,link:s}=e;return m.addNewCard(t,s).then((e=>{const t=p(e);_.addItem(t),E.close()})).catch((e=>{console.log(e)})).finally((()=>{E.hideLoading()}))}));l.addEventListener("click",(()=>{L[d.getAttribute("name")].resetValidation(),E.open()}));const k=new o(e.editFormPopup,(e=>{let{title:t,description:s}=e;return k.showLoading(),m.editProfile(t,s).then((()=>{b.setUserInfo({name:t,description:s}),k.close()})).catch((e=>{console.error(e)})).finally((()=>{k.hideLoading()}))}));k.setEventListeners(),a.addEventListener("click",(()=>{const{name:e,description:t}=b.getUserInfo();h.value=e,u.value=t,L[c.getAttribute("name")].disableButton(),k.open()}));const S=new class extends n{constructor(e){super({popupSelector:e}),this._modalName=this._popup.querySelector(".modal__name"),this._modalImage=this._popup.querySelector(".modal__image"),super.setEventListeners()}open(e){this._modalName.textContent=e.name,this._modalImage.alt=e.name,this._modalImage.src=e.link,super.open()}}(e.previewPopup);S.close();const C=new o(e.changeAvatarPopup,I);C.setEventListeners();const I=e=>{let{link:t}=e;return C.showLoading(),m.updateAvatar(t).then((e=>{b.setAvatarImage(e.avatar),C.close(),C.reset()})).catch((e=>{console.error(e)})).finally((()=>{C.hideLoading()}))};e.updateAvatarButton.addEventListener("click",(()=>{L[e.avatarForm.getAttribute("name")].resetValidation(),C.open()}));const y=new class extends n{constructor(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Deleting...";super({popupSelector:e}),this._handleDelete=t,this._submitButton=this._popup.querySelector(".modal__button"),this._loadingButtonText=s}setEventListeners(){super.setEventListeners(),this._submitButton.addEventListener("click",(e=>{e.preventDefault(),this._handleDeleteCallback&&this._handleDeleteCallback()}))}open(e){this._handleDeleteCallback=e,super.open()}showLoading(){this._submitButton.textContent=this._loadingButtonText}hideLoading(){this._submitButton.textContent=this._submitButton.textContent}}(e.confirmDeleteModal,(e=>{B(e)}));y.setEventListeners();const B=e=>{y.open((()=>{y.showLoading(),m.deleteCard(e.getCardId()).then((()=>{e.deleteCard(),y.close()})).catch((e=>{console.err(e)})).finally((()=>{y.hideLoading()}))}))}}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,