!function(){"use strict";var e={960:function(e,t,s){e.exports=s.p+"190142da37235e3079a8.jpg"},291:function(e,t,s){e.exports=s.p+"9aed7cb3f54c0faa1f9f.jpg"},822:function(e,t,s){e.exports=s.p+"0fb96793ab89da938a7d.jpg"},328:function(e,t,s){e.exports=s.p+"395d21149564d1293c88.jpg"},705:function(e,t,s){e.exports=s.p+"a22751dd8a0e22ceb5f6.jpg"},561:function(e,t,s){e.exports=s.p+"0df918d480d675e4708e.jpg"}},t={};function s(i){var r=t[i];if(void 0!==r)return r.exports;var n=t[i]={exports:{}};return e[i](n,n.exports,s),n.exports}s.m=e,s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s.b=document.baseURI||self.location.href,function(){new URL(s(291),s.b),new URL(s(705),s.b),new URL(s(822),s.b),new URL(s(328),s.b),new URL(s(960),s.b),new URL(s(561),s.b);var e=class{constructor(e,t,s,i,r,n){this._name=e.name,this._link=e.link,this._id=e._id,this._isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleDelete=n,this._handleLikeCard=i,this._handleDislikeCard=r}_setEventListeners(){this.likeButton.addEventListener("click",(()=>{this._handleLike(this)})),this._element.querySelector(".card__trash-button").addEventListener("click",(()=>this._handleDelete())),this._imageModal=this._element.querySelector(".card__image"),this._imageModal.addEventListener("click",(()=>this._handleImageClick({link:this._link,name:this._name})))}_getTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}_handleLike(){this._isLiked?this._handleDislikeCard():this._isLiked||this._handleLikeCard()}deleteCard(){this._element.remove()}addLike(){this.likeButton.classList.add("card__like-button_active"),this._isLiked=!0}disLike(){this.likeButton.classList.remove("card__like-button_active"),this._isLiked=!1}generateCard(){this._element=this._getTemplate();const e=this._element.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this.likeButton=this._element.querySelector(".card__like-button"),!0===this._isLiked?this.addLike(this._id):!1===this._isLiked&&this.disLike(this._id),this._setEventListeners(),this._element}};class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=this._formElement.querySelectorAll(this._inputSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_setEventListeners(){this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}}class i{constructor(e){let{popupSelector:t}=e;this._popup=document.querySelector(t),this._closeButton=this._popup.querySelector(".modal__close")}setEventListeners(){this._popup.addEventListener("click",(e=>{e.target===e.currentTarget&&this.close()})),this._closeButton.addEventListener("click",(()=>this.close()))}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()}}class r extends i{constructor(e,t){super({popupSelector:e}),this._form=this._popup.querySelector(".modal__form"),this._submitButton=this._popup.querySelector(".modal__button"),this._formInputs=this._popup.querySelectorAll("input"),this._handleFormSubmit=t,this._buttonText=this._submitButton.textContent}_getInputValues(){const e={};return this._formInputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popup.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues())}))}renderLoading(e){this._submitButton.textContent=e?"Saving...":this._buttonText}close(){this._form.reset(),super.close()}}class n{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._cardsList=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._cardsList.prepend(e)}}const o=document.querySelector(".profile__edit-button"),a=document.querySelector(".profile__add-button"),l=document.querySelector(".profile__avatar-edit"),d=document.forms["card-form"],c=document.forms["profile-form"],h=document.forms["avatar-form"],u=document.querySelector("#profile-input-name"),_=document.querySelector("#profile-input-description"),m=new class{constructor(e){let{nameEl:t,descriptionEl:s,avatarEl:i}=e;this._nameEl=document.querySelector(t),this._descriptionEl=document.querySelector(s),this._link=document.querySelector(i)}getUserInfo(){return{name:this._nameEl.textContent,description:this._descriptionEl.textContent,avatar:this._link.src}}setUserInfo(e){let{name:t,description:s}=e;this._nameEl.textContent=t,this._descriptionEl.textContent=s}setAvatarImage(e){this._link.src=e}}({nameEl:".profile__title",descriptionEl:".profile__description",avatarEl:".profile__avatar"}),p=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._url=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getInitialCards(){return this._request(`${this._url}/cards`,{headers:this._headers})}fetchUserInfo(){return this._request(`${this._url}/users/me`,{headers:this._headers})}editProfile(e){let{name:t,description:s}=e;return this._request(`${this._url}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})})}editProfileAvatar(e){let{link:t}=e;return this._request(`${this._url}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})})}addNewCard(e){let{cardName:t,cardLink:s}=e;return this._request(`${this._url}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})})}deleteCard(e){return this._request(`${this._url}/cards/${e}`,{method:"DELETE",headers:this._headers})}addLike(e){return this._request(`${this._url}/cards/${e}/likes`,{method:"PUT",headers:this._headers})}deleteLike(e){return this._request(`${this._url}/cards/${e}/likes`,{method:"DELETE",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"d8e635dc-b9a3-40bb-8b8a-44b118a2b105","Content-Type":"application/json"}});let f,v;Promise.all([p.fetchUserInfo(),p.getInitialCards()]).then((e=>{let[t,s]=e;v=t._id,m.setUserInfo({name:t.name,description:t.about}),m.setAvatarImage(t.avatar),f=new n({items:s,renderer:e=>{const t=L(e);f.addItem(t)}},".cards__list"),f.renderItems()})).catch(console.error);const E=e=>{y.open(e)},L=t=>{const s=new e(t,"#card-template",E,(()=>{p.addLike(t._id).then((()=>{s.addLike()})).catch(console.error)}),(()=>{p.deleteLike(t._id).then((()=>{s.disLike()})).catch(console.error)}),(()=>{C.open(),C.setSubmitAction((()=>{p.deleteCard(t._id).then((()=>{s.deleteCard(),C.close()})).catch(console.error)}))}));return s.generateCard()},b={};function k(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.renderLoading(!0,s),e().then((()=>{t.close()})).catch(console.error).finally((()=>{t.renderLoading(!1)}))}var S;S={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",formSelector:"form"},Array.from(document.querySelectorAll(S.formSelector)).forEach((e=>{const s=new t(S,e),i=e.getAttribute("name");b[i]=s,s.enableValidation()}));const g=new r("#change-avatar-modal",(e=>{k((function(){return p.editProfileAvatar(e).then((e=>{m.setAvatarImage(e.avatar)}))}),g)}));g.setEventListeners(),l.addEventListener("click",(()=>{g.open(),b[h.getAttribute("name")].resetValidation()}));const y=new class extends i{constructor(e){super({popupSelector:e}),this._modalName=this._popup.querySelector(".modal__name"),this._modalImage=this._popup.querySelector(".modal__image"),super.setEventListeners()}open(e){this._modalName.textContent=e.name,this._modalImage.alt=e.name,this._modalImage.src=e.link,super.open()}}("#image-modal"),C=new class extends i{constructor(e){super({popupSelector:e}),this._form=this._popup.querySelector("form")}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleDeleteSubmit()}))}setSubmitAction(e){this._handleDeleteSubmit=e}}("#confirm-delete-modal");C.setEventListeners();const q=new r("#edit-modal",(e=>{k((function(){return p.editProfile(e).then((()=>{m.setUserInfo({name:e.name,description:e.description})}))}),q)}));q.setEventListeners(),o.addEventListener("click",(()=>{const{name:e,description:t}=m.getUserInfo();u.value=e,_.value=t,b[c.getAttribute("name")].resetValidation(),q.open()}));const I=new r("#add-modal",(e=>{k((function(){return p.addNewCard({cardName:e.name,cardLink:e.link}).then((e=>{const t=L(e);f.addItem(t)}))}),I)}));I.setEventListeners(),a.addEventListener("click",(()=>{b[d.getAttribute("name")].resetValidation(),I.open()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,